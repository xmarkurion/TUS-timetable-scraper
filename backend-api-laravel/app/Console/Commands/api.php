<?php

namespace App\Console\Commands;

use App\Models\User;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\DB;

class api extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'api {action?}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Command description';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        // if action is not provided, show help
        if(!$this->argument('action')){
            $this->info('Usage: php artisan api create-user');
            $this->info('Usage: php artisan api trunkate-tokens');
            return;
        }

        // create user
        if($this->argument('action') == 'create-user'){
            $this->info('Creating user...');
            //ask for user details
            $name = $this->ask('Enter name');
            $email = $this->ask('Enter email');
            $password = $this->secret('Enter password');

            $user = User::create([
                'name' => $name,
                'email' => $email,
                'password' => bcrypt($password),
            ]);
            $this->info('User created successfully');

            $api_user_token = $user->createToken('auth_token_autogenerated')->plainTextToken;
            $this->info('User token: '.$api_user_token);
            return;
        }

        // trunkate tokens
        if($this->argument('action') == 'trunkate-tokens'){
            $this->info('Trunkating tokens...');
            DB::table('personal_access_tokens')->truncate();
            $this->info('Tokens trunkated successfully');
            return;
        }

       // if command is crete
        if($this->argument('action') == 'setup'){
            $user = User::where('id', 1)->first();
            $api_user_token = $user->createToken('auth_token_autogenerated')->plainTextToken;
            $this->info('User token: '.$api_user_token);
        }

        // if command is show auth_token_autogenerated
        if($this->argument('action') == 'show'){
            $data = DB::table('personal_access_tokens')
                ->whereRaw('name like "%auth_token_autogenerated%" AND tokenable_id = 1')
                ->limit(1)
                ->get();
            $this->info('User token: '.$data[0]->token);
        }
    }
}
